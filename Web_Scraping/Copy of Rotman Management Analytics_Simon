{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Rotman Management Analytics_Simon","provenance":[{"file_id":"11pOv3lI50xdWPJCw1Wi2tpYbpGYGcfWU","timestamp":1584636598121},{"file_id":"1BqXnwfLMQe5cUHzK-s8kcyVQ6lAuW8SA","timestamp":1584456589292}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"FBz5J654GkD2","colab_type":"code","colab":{}},"source":["import numpy as np\n","import pandas as pd\n","import urllib\n","from bs4 import BeautifulSoup\n","import requests"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"fyJmdmLXJ6Ij","colab_type":"code","colab":{}},"source":["url = 'https://www.rotman.utoronto.ca/Degrees/MastersPrograms/MMA/TheProgram/CourseDescriptions'\n","resp = requests.get(url) # Requests the content of the url\n","soup = BeautifulSoup(resp.content)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZOrx6wiNJtqd","colab_type":"code","colab":{}},"source":["i = 0\n","#df_indeed = pd.DataFrame()\n","courses = []\n","#for link in links:\n","#url = 'https://ca.indeed.com/jobs?q=data+scientist&l='\n","# resp = requests.get(link) # Requests the content of the url\n","# soup = BeautifulSoup(resp.content)\n","\n","for item in soup.find_all(name=\"div\", attrs={\"id\":\"body_1_maincontent_6_PnlSource\"}):\n","  course={}\n","  fk=[]\n","  #itemsoup = BeautifulSoup(item) \n","  # print(item)\n","  # print(type(item))\n","\n","  # des = bs.find(name=\"div\", attrs={\"class\":\"jobsearch-jobDescriptionText\"})\n","  # job['Description'] = des.text # or try to append it to a list first and then do \" \".join(list)\n","  \n","  tit = item.find(name=\"h3\")\n","  course['Title'] = tit.text\n","  # course['Title'] = item.find_all(name=\"h3\").get_text()\n","\n","  for p in item.find_all(name=\"p\"):\n","    string = p.get_text()\n","    if ('Instructor' not in string) & ('co-ordinator' not in string) & ('Coordinator' not in string):\n","      fk.append(p.get_text())\n","  for l in item.find_all(name=\"li\"):\n","    fk.append(l.get_text())\n","  course['Details'] = \" \".join(fk)\n","  \n","  # skill_idx = [i for i, s in enumerate(fk) if 'SKILL SETS' in s]\n","  # level_idx = [i for i, s in enumerate(fk) if 'units' in s]\n","  # designed_idx = [i for i, s in enumerate(fk) if 'DESIGNED BY' in s]\n","  # details_idx = designed_idx[0] +1\n","  # tools_idx = [i for i, s in enumerate(fk) if 'TOOLS' in s]\n","\n","  # #print(level_idx)\n","  # course['Level'] = fk[level_idx[0]].replace(\"3 units\",\"\")\n","  # try:\n","  #   course['Skills'] = fk[skill_idx[0]].replace(\"SKILL SETS\",\"\")\n","  # except:\n","  #   course['Skills'] = \"\"\n","  # try:\n","  #   course['Tools'] = fk[tools_idx[0]].replace(\"TOOLS\",\"\")\n","  # except:\n","  #   course['Tools'] = \"\"\n","  # course['Details'] = fk[details_idx]\n","  # #print(fk[3])  \n","  courses.append(course) \n","\n","# postings\n","df_courses = pd.DataFrame(courses)\n","\n","\n","  "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"hziytOEe5TC6","colab_type":"code","colab":{}},"source":["df_courses\n","df_courses.to_excel('Courses at Rotman.xlsx')"],"execution_count":0,"outputs":[]}]}